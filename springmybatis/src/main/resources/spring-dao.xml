<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://172.30.1.172/ib_vas_charge?characterEncoding=utf-8"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--  主要就是配置好数据源属性，其他的属性也能在下面继续配，这样的话可以完全取代SqlMapConfig.xml  -->
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="mybatis/SqlMapConfig.xml"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--  在mybatis中，SqlSession封装了所有数据库查询方法；  -->
    <!--  而在mybatis-spring中，则没有了SqlSession，而是SqlSessionTemplate；这两个是同一个东西  -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <!--  只能使用构造器进行注入，因为没有set方法  -->
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <bean id="testUserMapper" class="com.cheng.demo.mapper.TestUserMapperImpl">
        <property name="sqlSession" ref="sqlSession"/>
    </bean>

    <!--  分页方式有三种：  -->
    <!--  第一种：使用硬编码的方式，自己创建一个Page类，封装一些分页属性和方法，然后通过数据库limit语句实现分页  -->
    <!--  第二种：使用Interceptor过滤器实现分页  -->
    <!--  第三种：使用PageHelper分页插件来实现分页  -->

</beans>